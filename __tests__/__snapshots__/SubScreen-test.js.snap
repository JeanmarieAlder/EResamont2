// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SubScreen - Render no child in English 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "padding": 15,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <RNCWebView
      cacheEnabled={true}
      javaScriptEnabled={true}
      messagingEnabled={false}
      onContentProcessDidTerminate={[Function]}
      onHttpError={[Function]}
      onLoadingError={[Function]}
      onLoadingFinish={[Function]}
      onLoadingProgress={[Function]}
      onLoadingStart={[Function]}
      onMessage={[Function]}
      onShouldStartLoadWithRequest={[Function]}
      source={
        Object {
          "html": "<p><b>ALTIDOC - Téléconsultation et médecine de montagne</b> English page</p>",
        }
      }
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Object {
            "backgroundColor": "#ffffff",
          },
          Object {
            "flex": 1,
            "height": 1334,
          },
        ]
      }
      textZoom={270}
      useSharedProcessPool={true}
    />
  </View>
</View>
`;

exports[`SubScreen - Render no child in Italian 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "padding": 15,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <RNCWebView
      cacheEnabled={true}
      javaScriptEnabled={true}
      messagingEnabled={false}
      onContentProcessDidTerminate={[Function]}
      onHttpError={[Function]}
      onLoadingError={[Function]}
      onLoadingFinish={[Function]}
      onLoadingProgress={[Function]}
      onLoadingStart={[Function]}
      onMessage={[Function]}
      onShouldStartLoadWithRequest={[Function]}
      source={
        Object {
          "html": "<p><b>ALTIDOC - Téléconsultation et médecine de montagne</b> Italian page</p>",
        }
      }
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Object {
            "backgroundColor": "#ffffff",
          },
          Object {
            "flex": 1,
            "height": 1334,
          },
        ]
      }
      textZoom={270}
      useSharedProcessPool={true}
    />
  </View>
</View>
`;

exports[`SubScreen - Render no child with plaintext 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "padding": 15,
    }
  }
/>
`;

exports[`SubScreen - Render no child with text 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "padding": 15,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <RNCWebView
      cacheEnabled={true}
      javaScriptEnabled={true}
      messagingEnabled={false}
      onContentProcessDidTerminate={[Function]}
      onHttpError={[Function]}
      onLoadingError={[Function]}
      onLoadingFinish={[Function]}
      onLoadingProgress={[Function]}
      onLoadingStart={[Function]}
      onMessage={[Function]}
      onShouldStartLoadWithRequest={[Function]}
      source={
        Object {
          "html": "<p><b>ALTIDOC - Téléconsultation et médecine de montagne</b> French page</p>",
        }
      }
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Object {
            "backgroundColor": "#ffffff",
          },
          Object {
            "flex": 1,
            "height": 1334,
          },
        ]
      }
      textZoom={270}
      useSharedProcessPool={true}
    />
  </View>
</View>
`;

exports[`SubScreen - Render with children and no text 1`] = `
<View
  accessibilityIgnoresInvertColors={true}
  style={
    Object {
      "height": "100%",
      "width": "100%",
    }
  }
>
  <Image
    source={1}
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "height": "100%",
          "width": "100%",
        },
        undefined,
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
        "marginTop": 20,
      }
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "alignItems": "center",
          "flexGrow": 1,
          "justifyContent": "flex-start",
        }
      }
    >
      <View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#232323",
              "borderRadius": 10,
              "height": 40,
              "justifyContent": "center",
              "marginTop": 10,
              "opacity": 1,
              "padding": 10,
              "width": "80%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#ffffff",
                "fontFamily": "sans-serif-medium",
                "textAlign": "center",
                "textAlignVertical": "center",
              }
            }
          >
            France
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#232323",
              "borderRadius": 10,
              "height": 40,
              "justifyContent": "center",
              "marginTop": 10,
              "opacity": 1,
              "padding": 10,
              "width": "80%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#ffffff",
                "fontFamily": "sans-serif-medium",
                "textAlign": "center",
                "textAlignVertical": "center",
              }
            }
          >
            Italie
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#232323",
              "borderRadius": 10,
              "height": 40,
              "justifyContent": "center",
              "marginTop": 10,
              "opacity": 1,
              "padding": 10,
              "width": "80%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#ffffff",
                "fontFamily": "sans-serif-medium",
                "textAlign": "center",
                "textAlignVertical": "center",
              }
            }
          >
            Suisse
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#232323",
              "borderRadius": 10,
              "height": 40,
              "justifyContent": "center",
              "marginTop": 10,
              "opacity": 1,
              "padding": 10,
              "width": "80%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#ffffff",
                "fontFamily": "sans-serif-medium",
                "textAlign": "center",
                "textAlignVertical": "center",
              }
            }
          >
            En Europe
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`SubScreen - Render with children and text 1`] = `
<View
  accessibilityIgnoresInvertColors={true}
  style={
    Object {
      "height": "100%",
      "width": "100%",
    }
  }
>
  <Image
    source={1}
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "height": "100%",
          "width": "100%",
        },
        undefined,
      ]
    }
  />
  <View
    style={
      Object {
        "flex": 1,
        "paddingTop": 20,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        javaScriptEnabled={true}
        messagingEnabled={false}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        source={
          Object {
            "html": "<p>Text in French.  Also it's located in plaintext field.</p>",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
              "height": 333.5,
            },
          ]
        }
        textZoom={270}
        useSharedProcessPool={true}
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "flex-start",
          "marginTop": 20,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#232323",
            "borderRadius": 10,
            "height": 40,
            "justifyContent": "center",
            "marginTop": 10,
            "opacity": 1,
            "padding": 10,
            "width": "80%",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontFamily": "sans-serif-medium",
              "textAlign": "center",
              "textAlignVertical": "center",
            }
          }
        >
          Questionnaire de satisfaction
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#232323",
            "borderRadius": 10,
            "height": 40,
            "justifyContent": "center",
            "marginTop": 10,
            "opacity": 1,
            "padding": 10,
            "width": "80%",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontFamily": "sans-serif-medium",
              "textAlign": "center",
              "textAlignVertical": "center",
            }
          }
        >
          Enquête générale sur la santé des alpinistes
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#232323",
            "borderRadius": 10,
            "height": 40,
            "justifyContent": "center",
            "marginTop": 10,
            "opacity": 1,
            "padding": 10,
            "width": "80%",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontFamily": "sans-serif-medium",
              "textAlign": "center",
              "textAlignVertical": "center",
            }
          }
        >
          Sondage sur les maladies aiguës d’altitude
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#232323",
            "borderRadius": 10,
            "height": 40,
            "justifyContent": "center",
            "marginTop": 10,
            "opacity": 1,
            "padding": 10,
            "width": "80%",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontFamily": "sans-serif-medium",
              "textAlign": "center",
              "textAlignVertical": "center",
            }
          }
        >
          Identificateur anonyme
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`TODO: SubScreen - Render no child in German 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "padding": 15,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <RNCWebView
      cacheEnabled={true}
      javaScriptEnabled={true}
      messagingEnabled={false}
      onContentProcessDidTerminate={[Function]}
      onHttpError={[Function]}
      onLoadingError={[Function]}
      onLoadingFinish={[Function]}
      onLoadingProgress={[Function]}
      onLoadingStart={[Function]}
      onMessage={[Function]}
      onShouldStartLoadWithRequest={[Function]}
      source={
        Object {
          "html": "<p><b>ALTIDOC - Téléconsultation et médecine de montagne</b> French page</p>",
        }
      }
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Object {
            "backgroundColor": "#ffffff",
          },
          Object {
            "flex": 1,
            "height": 1334,
          },
        ]
      }
      textZoom={270}
      useSharedProcessPool={true}
    />
  </View>
</View>
`;
